//File generated by Functionblock Generator
// !!!! DO NOT EDIT MANUALLY !!!!
/* 
 * Copyright 2018 Qbus n.v.
 */

#ifndef FUNCTIONBLOCK_DEFINITIONS_THERMOIF_H_
#define FUNCTIONBLOCK_DEFINITIONS_THERMOIF_H_
#include <string>
#include <set>
#include <vector>
#include <stdint.h>
#include <boost/optional.hpp>

namespace SdkNs {
namespace ThermoDef
{

    struct currRegimeConf
    {
        currRegimeConf(): available(), readAllowed(), writeAllowed() {};
        /**
         * Is the property "currRegime" available (does this functionblock implement this property)
         */
        boost::optional<bool> available;
        /**
         * is the value of property "currRegime" readable
         */
        boost::optional<bool> readAllowed;
        /**
         * is the value of property "currRegime" writable
         */
        boost::optional<bool> writeAllowed;

    };

    struct currTempConf
    {
        currTempConf(): available(), readAllowed(), writeAllowed(), min(), max(), step(), unit() {};
        /**
         * Is the property "currTemp" available (does this functionblock implement this property)
         */
        boost::optional<bool> available;
        /**
         * is the value of property "currTemp" readable
         */
        boost::optional<bool> readAllowed;
        /**
         * is the value of property "currTemp" writable
         */
        boost::optional<bool> writeAllowed;

        /**
         * The minimum value of property "currTemp"
         */
        boost::optional<double> min;
        /**
         * The maximum value of property "currTemp"
         */
        boost::optional<double> max;
        /**
         * The step value of property "currTemp"
         */
        boost::optional<double> step;
        /**
         * The unit value of property "currTemp"
         */
        boost::optional<std::string> unit;

    };

    struct setTempConf
    {
        setTempConf(): available(), readAllowed(), writeAllowed(), min(), max(), step(), unit() {};
        /**
         * Is the property "setTemp" available (does this functionblock implement this property)
         */
        boost::optional<bool> available;
        /**
         * is the value of property "setTemp" readable
         */
        boost::optional<bool> readAllowed;
        /**
         * is the value of property "setTemp" writable
         */
        boost::optional<bool> writeAllowed;

        /**
         * The minimum value of property "setTemp"
         */
        boost::optional<double> min;
        /**
         * The maximum value of property "setTemp"
         */
        boost::optional<double> max;
        /**
         * The step value of property "setTemp"
         */
        boost::optional<double> step;
        /**
         * The unit value of property "setTemp"
         */
        boost::optional<std::string> unit;

    };

    struct HistoryState
    {
        HistoryState():  timeUTC(), currRegime(), currTemp(), setTemp() {};

        /**
         * The epoch time of this event
         */
        time_t timeUTC;
	    boost::optional<std::string> currRegime;
	    boost::optional<double> currTemp;
	    boost::optional<double> setTemp;

    };
}
}
#endif
