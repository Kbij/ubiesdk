//File generated by Functionblock Generator
// !!!! DO NOT EDIT MANUALLY !!!!
/*
 * Copyright 2018 Qbus n.v.
 */

#ifndef MOCK_MULTICOLORIF_H_
#define MOCK_MULTICOLORIF_H_

#include "Sdk/Fb/MultiColorIf.h"
#include "gtest/gtest.h"
#include "gmock/gmock.h"

#include <vector>
#include <map>


namespace SdkNs
{
class MultiColorMock: public SdkNs::MultiColorIf
{
public:
	MOCK_CONST_METHOD0(id, std::string());
	MOCK_CONST_METHOD0(name, std::string());
	MOCK_METHOD1(name, void(const std::string& name));
	MOCK_METHOD1(variant, void(const std::string& variant));
	MOCK_CONST_METHOD0(location, std::string());
	MOCK_METHOD1(location, void(const std::string& location));
	MOCK_METHOD1(locationId, void(int locationId));
	MOCK_METHOD1(refId, void(const std::string& refId));
	MOCK_METHOD0(commit, void());
	MOCK_METHOD3(cloudMessage, void(SdkNs::SdkMessageLevel, const std::string& , const std::map<int, std::string>& ));
	MOCK_METHOD1(registerClient, void(SdkNs::MultiColorClientIf*));
	MOCK_METHOD0(unRegisterClient, void());

	MOCK_METHOD1(brightness, void(double ubieValue));

	MOCK_METHOD1(brightnessConfig, void(const SdkNs::MultiColorDef::brightnessConf& conf));

	MOCK_METHOD1(currRegime, void(std::string ubieValue));

	MOCK_METHOD1(currRegimeConfig, void(const SdkNs::MultiColorDef::currRegimeConf& conf));

	MOCK_METHOD1(hue, void(double ubieValue));

	MOCK_METHOD1(hueConfig, void(const SdkNs::MultiColorDef::hueConf& conf));

	MOCK_METHOD1(on, void(bool ubieValue));

	MOCK_METHOD1(onConfig, void(const SdkNs::MultiColorDef::onConf& conf));

	MOCK_METHOD1(presetColor, void(int ubieValue));

	MOCK_METHOD1(presetColorConfig, void(const SdkNs::MultiColorDef::presetColorConf& conf));

	MOCK_METHOD1(registerPresetColorValues, void(const std::vector<MultiColorDef::PresetColorValue>& presetValues));

	MOCK_METHOD1(presetMovie, void(int ubieValue));

	MOCK_METHOD1(presetMovieConfig, void(const SdkNs::MultiColorDef::presetMovieConf& conf));

	MOCK_METHOD1(registerPresetMovieValues, void(const std::vector<MultiColorDef::PresetMovieValue>& presetValues));

	MOCK_METHOD1(saturation, void(double ubieValue));

	MOCK_METHOD1(saturationConfig, void(const SdkNs::MultiColorDef::saturationConf& conf));

	MOCK_METHOD1(commitHistory, void(const std::vector<SdkNs::MultiColorDef::HistoryState>&));
};
}
#endif /* MOCK_MULTICOLORIF_H_ */
