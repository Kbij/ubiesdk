//File generated by Functionblock Generator
// !!!! DO NOT EDIT MANUALLY !!!!
/*
 * Copyright 2018 Qbus n.v.
 */

#ifndef MOCK_NESTTHERMOIF_H_
#define MOCK_NESTTHERMOIF_H_

#include "Sdk/Fb/NestThermoIf.h"
#include "gtest/gtest.h"
#include "gmock/gmock.h"

#include <vector>
#include <map>


namespace SdkNs
{
class NestThermoMock: public SdkNs::NestThermoIf
{
public:
	MOCK_CONST_METHOD0(id, std::string());
	MOCK_CONST_METHOD0(name, std::string());
	MOCK_METHOD1(name, void(const std::string& name));
	MOCK_METHOD1(variant, void(const std::string& variant));
	MOCK_CONST_METHOD0(location, std::string());
	MOCK_METHOD1(location, void(const std::string& location));
	MOCK_METHOD1(locationId, void(int locationId));
	MOCK_METHOD1(refId, void(const std::string& refId));
	MOCK_METHOD0(commit, void());
	MOCK_METHOD3(cloudMessage, void(SdkNs::SdkMessageLevel, const std::string& , const std::map<int, std::string>& ));
	MOCK_METHOD1(registerClient, void(SdkNs::NestThermoClientIf*));
	MOCK_METHOD0(unRegisterClient, void());

	MOCK_METHOD1(registerCurrRegimeValues, void(const std::vector<std::string>& enumValues));

	MOCK_METHOD1(currRegime, void(std::string ubieValue));

	MOCK_METHOD1(currRegimeConfig, void(const SdkNs::NestThermoDef::currRegimeConf& conf));

	MOCK_METHOD1(currTemp, void(double ubieValue));

	MOCK_METHOD1(currTempConfig, void(const SdkNs::NestThermoDef::currTempConf& conf));

	MOCK_METHOD1(isCooling, void(bool ubieValue));

	MOCK_METHOD1(isCoolingConfig, void(const SdkNs::NestThermoDef::isCoolingConf& conf));

	MOCK_METHOD1(isHeating, void(bool ubieValue));

	MOCK_METHOD1(isHeatingConfig, void(const SdkNs::NestThermoDef::isHeatingConf& conf));

	MOCK_METHOD1(setCoolTemp, void(double ubieValue));

	MOCK_METHOD1(setCoolTempConfig, void(const SdkNs::NestThermoDef::setCoolTempConf& conf));

	MOCK_METHOD1(setHeatTemp, void(double ubieValue));

	MOCK_METHOD1(setHeatTempConfig, void(const SdkNs::NestThermoDef::setHeatTempConf& conf));

	MOCK_METHOD1(setTemp, void(double ubieValue));

	MOCK_METHOD1(setTempConfig, void(const SdkNs::NestThermoDef::setTempConf& conf));

	MOCK_METHOD1(commitHistory, void(const std::vector<SdkNs::NestThermoDef::HistoryState>&));
};
}
#endif /* MOCK_NESTTHERMOIF_H_ */
